{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/postlink.js"],"names":["__webpack_exports__","_ref","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_postlink__WEBPACK_IMPORTED_MODULE_6__","key","id","post","react__WEBPACK_IMPORTED_MODULE_3___default","a","Fragment","_components_heading__WEBPACK_IMPORTED_MODULE_4__","className","_components_tailing__WEBPACK_IMPORTED_MODULE_5__","pageQuery","Wrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","name","styles","TitleStyle","emotion__WEBPACK_IMPORTED_MODULE_0__","DateStyle","DescStyle","PostLink","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","path","title","description"],"mappings":"kNASeA,EAAA,iBAAAC,GAIT,IACEC,EADFD,EAHJE,KACEC,kBAAqBC,MAIpBC,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,OACvCC,IAAI,SAAAJ,GAAI,OACPK,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACEC,IAAKR,EAAKC,KAAKQ,GACfC,KAAMV,EAAKC,SAGjB,OACEI,OAAAC,EAAA,EAAAD,CAACM,EAAAC,EAAMC,SAAP,KACER,OAAAC,EAAA,EAAAD,CAACS,EAAA,EAAD,MACAT,OAAAC,EAAA,EAAAD,CAAA,OAAKU,UAAU,gBACbV,OAAAC,EAAA,EAAAD,CAAA,OAAKU,UAAU,WACbV,OAAAC,EAAA,EAAAD,CAAA,WAAMV,KAGVU,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,QAKC,IAAMC,EAAS,4FC7BhBC,EAAUb,OAAAc,EAAA,EAAAd,CAAA,OAAHe,OAAA,aAAGf,CAAH,CAAAgB,KAAA,UAAAC,OAAA,oCAKPC,EAAUlB,OAAAmB,EAAA,IAAAnB,CAAA,CAAAgB,KAAA,SAAAC,OAAA,4GASVG,EAASpB,OAAAmB,EAAA,IAAAnB,CAAA,CAAAgB,KAAA,UAAAC,OAAA,oEAOTI,EAASrB,OAAAmB,EAAA,IAAAnB,CAAA,CAAAgB,KAAA,UAAAC,OAAA,mIAqBAK,IAXE,SAAAjC,GAAA,IAAGgB,EAAHhB,EAAGgB,KAAH,OACfL,OAAAC,EAAA,EAAAD,CAACa,EAAD,KACEb,OAAAC,EAAA,EAAAD,CAACuB,EAAA,KAAD,CAAMC,GAAInB,EAAKR,YAAY4B,KAAMf,UAAWQ,GACzCb,EAAKR,YAAY6B,OAGpB1B,OAAAC,EAAA,EAAAD,CAAA,KAAGU,UAAWU,GAAYf,EAAKR,YAAYC,MAC3CE,OAAAC,EAAA,EAAAD,CAAA,KAAGU,UAAWW,GAAYhB,EAAKR,YAAY8B","file":"component---src-pages-blog-js-dd72aa9d5e8b9db6ee35.js","sourcesContent":["import React from \"react\"\nimport Heading from '../components/heading'\nimport Tailing from '../components/tailing'\nimport PostLink from '../components/postlink'\n\nimport { graphql } from \"gatsby\"\n\nimport '../styles/layout'\n\nexport default ({\n  data: {\n    allMarkdownRemark: { edges },\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => \n      <PostLink \n        key={edge.node.id} \n        post={edge.node} />\n    )\n\n  return (\n    <React.Fragment>\n      <Heading />\n      <div className=\"page-content\">\n        <div className=\"wrapper\">\n          <div>{Posts}</div>  \n        </div>\n      </div>\n      <Tailing />\n    </React.Fragment>\n  )\n}\n  \nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD\")\n            path\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport { Link } from \"gatsby\"\n// import styled, { css } from 'react-emotion'\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nconst Wrapper = styled.div`\n    height: '80px';\n    maxHeight: '80px';\n`\n\nconst TitleStyle = css`\n  color: #d3d3d3;\n  font-size: 0.88em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n`\n\nconst DateStyle = css`\n  color: #C0C0C0;\n  display: inline-block;\n  float: right;\n  font-size: 0.8em;\n`\n\nconst DescStyle = css`\n  color: #585858;\n  margin: 0 0 10px 14px;\n  font-size: 0.78em;\n  font-weight: 300;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst PostLink = ({ post }) => (\n  <Wrapper>\n    <Link to={post.frontmatter.path} className={TitleStyle}>\n      {post.frontmatter.title}\n    </Link>\n\n    <p className={DateStyle}>{post.frontmatter.date}</p>\n    <p className={DescStyle}>{post.frontmatter.description}</p>\n  </Wrapper>\n)\n\nexport default PostLink"],"sourceRoot":""}